// https://github.com/gradle/gradle/issues/4848
gradle.startParameter.configureOnDemand = false


buildscript {
    apply from: 'gradle/dependencies.gradle'
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath deps.build.gradlePlugins.android
        classpath deps.build.gradlePlugins.kotlin
        classpath deps.build.gradlePlugins.dokka
        classpath deps.build.gradlePlugins.mavenPublish
        classpath deps.build.gradlePlugins.spotless
        classpath deps.build.gradlePlugins.shadow
        classpath deps.apacheClient
    }
}

subprojects {
    apply from: rootProject.file('gradle/dependencies.gradle')

    repositories {
        google()
        mavenCentral()
    }

    configurations.configureEach {
        resolutionStrategy.eachDependency {
            if (requested.name.startsWith("kotlin-stdlib")) {
                useTarget("${requested.group}:${requested.name.replace("jre", "jdk")}:${requested.version}")
            } else if (requested.group == "org.jetbrains.kotlin") {
                useVersion(deps.versions.kotlin)
            }
        }
    }

    if (project.path != ":tests") {
        apply plugin: 'com.diffplug.spotless'
        spotless {
            format 'misc', {
                target '**/*.md', '**/.gitignore'

                trimTrailingWhitespace()
                endWithNewline()
            }
            kotlin {
                target "**/*.kt"
                ktlint(deps.versions.ktlint).userData(['indent_size': '2', 'continuation_indent_size': '2'])
                ktfmt(deps.versions.ktfmt)
                licenseHeaderFile rootProject.file('config/spotless/copyright.kt')
                trimTrailingWhitespace()
                endWithNewline()
            }
            java {
                target "**/*.java"
                googleJavaFormat(deps.versions.gjf)
                licenseHeaderFile rootProject.file('config/spotless/copyright.java')
                removeUnusedImports()
                trimTrailingWhitespace()
                endWithNewline()
            }
            groovyGradle {
                target '**/*.gradle'
                trimTrailingWhitespace()
                endWithNewline()
            }
        }
    }
}
